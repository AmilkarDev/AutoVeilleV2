@model AutoveilleBL.Models.Web.UtilisateurSite

@functions {
    string FormatNullableDate(DateTime? value)
    {
        return value.HasValue ? value.Value.ToString("dd/MM/yyyy") : " ";

    }
}
<div class="form-horizontal">
    <h4>Modifier l'utilisateur selectionné</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div id="Alerts">

    </div>

    <div class="row form-group" hidden="hidden">
        <label class="col-md-3">Id d'utilisateur</label>
        <input class="form-control col-md-9" id="userIdInput" value="@Model.UserID" />
    </div>

    <div class="row form-group">
        <label class="col-md-3">Nom d'utilisateur</label>
        <input class="form-control col-md-9" id="usernameInput" value="@Model.UserName" />
    </div>

    <div class="row form-group">
        <label class="col-md-3">Nom</label>
        <input class="form-control col-md-9" id="nomInput" value="@Model.FirstName" />
    </div>

    <div class="row form-group">
        <label class="col-md-3">Prénom</label>
        <input class="form-control col-md-9" id="prenomInput" value="@Model.LastName" />
    </div>

    <div class="row form-group">
        <label class="col-md-3">Nouveau mot de passe</label>
        <input type="password" class="form-control col-md-9" id="passwordInput" value="@Model.Password" />
    </div>

    <div class="row form-group">
        <label class="col-md-3">Confirmer mot de passe</label>
        <input type="password" class="form-control col-md-9" id="passwordConfirmInput" value="@Model.ConfirmPassword" />
    </div>

    <div class="row form-group">
        <label class="col-md-3">Email</label>
        <input class="form-control col-md-9" id="emailInput" value="@Model.Email" />
    </div>

    <div class="row form-group">
        <label class="col-md-3">Langue</label>
        @Html.EnumDropDownListFor(
                                    x => x.Langue,
                                    new { @class = "form-control ", style = "width: 400px;", id = "langueInput" })
    </div>

    <div class="row form-group">
        <label class="col-md-3">Role</label>
        @Html.EnumDropDownListFor(
                                    x => x.Role,
                                    new { @class = "form-control ", style = "width: 400px;", id = "roleInput" })

        @Html.DropDownList("commerces", (SelectList)ViewData["commerces"],
                                    new { @class = "form-control ", style = "width: 400px;display: none;", id = "concessionInput" })
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button id="userModifButton" class="btn btn-success">Modifier</button>
        </div>
    </div>
</div>
@*}*@

@section scripts {
    @Scripts.Render("~/bundles/jqueryval");
}
<script>
    $("#userModifButton").click(function () {
        var numeroCommerce = $("#concessionInput").val();
        numeroCommerce = numeroCommerce !== "" ? numeroCommerce : 0;
        var user = {
            UserId: $("#userIdInput").val(),
            Role: $("#roleInput").val(),
            Langue: $("#langueInput").val(),
            Email: $("#emailInput").val(),
            Password: $("#passwordInput").val(),
            ConfirmPassword: $("#passwordConfirmInput").val(),
            LastName: $("#prenomInput").val(),
            FirstName: $("#nomInput").val(),
            UserName: $("#usernameInput").val(),
            NoCommerce: numeroCommerce
        };

        $.ajax({
            url: "../Utilisateurs/ModifierUtilisateur",
            contentType: 'application/json; charset=utf-8',
            type: "post",
            dataType: 'json',
            data: JSON.stringify(user),
            success: function (response) {
                console.log("success response : " + response.message);
                $('.modal-body').html(response.message);
                $('.modal-body').modal("show");
                $('#usersTable').DataTable().ajax.reload();
            },
            error: function (xhr) {
                console.log("xhr error:  " + JSON.stringify(xhr.responseJSON));
                var jsonArray = xhr.responseJSON;
                $("#Alerts").empty();
                $.each(jsonArray, function (index, jsonObject) {
                    console.log("key : " + jsonObject.key + " ; value : " + jsonObject.errors[0]);
                    $("#Alerts").append('<p class="text-danger">  ' + jsonObject.key + " : " + jsonObject.errors[0] + "</p>");
                });
            }
        });
    });

    $(function () {
        $("#roleInput").change(function () {
            var val = $(this).val();
            if (val === "2") {
                $("#concessionInput").val(@Model.NoCommerce.ToString());
                $("#concessionInput").show();
            }
            else {
                $("#concessionInput").hide();
            }
        });
    });

    $(document).ready(function () {
        var val = $("#roleInput").val();
        if (val === "2") {
            $("#concessionInput").val(@Model.NoCommerce.ToString());
            $("#concessionInput").show();
        }
        else {
            $("#concessionInput").hide();
        }
    });
</script>